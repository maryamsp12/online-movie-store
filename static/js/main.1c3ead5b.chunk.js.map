{"version":3,"sources":["components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","services/fakeGenreService.js","services/fakeMovieService.js","components/movies.jsx","utils/paginate.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","props","order","onSort","renderSortIcon","column","react_default","a","createElement","className","_this2","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","_this$props","data","Table","_ref","tableHeader","tableBody","Like","classes","liked","style","cursor","aria-hidden","MoviesTable","movie","like","onLike","onDelete","movies","table","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","genres","name","title","genre","numberInStock","dailyRentalRate","publishDate","Movies","state","handleDelete","filter","m","setState","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","selectedGenre","handleSort","getPagedData","_this$state","allMovies","filtered","pageNumber","startIndex","slice","take","value","paginate","orderBy","totalCount","length","concat","g","count","_this$state2","_this$getPagedData","listGroup","moviesTable","pagination","Customers","Rentals","NotFound","NavBar","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","App","Fragment","navbar","Switch","Route","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c3ead5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n  //columns : array\r\n  //sortColumn : object\r\n  //onSort : funstion\r\n\r\n    raiseSort = path => {\r\n        const sortColumn = {...this.props.sortColumn}\r\n    if (sortColumn.path === path)\r\n    sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\"\r\n    else{\r\n        sortColumn.path = path\r\n        sortColumn.order = 'asc'\r\n    }\r\n    this.props.onSort(sortColumn)\r\n    }\r\n\r\n    renderSortIcon = column => {\r\n        const { sortColumn } = this.props\r\n        if (column.path !== sortColumn.path) return null\r\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\n        return <i className=\"fa fa-sort-desc\" />\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <thead>\r\n            <tr>\r\n                {this.props.columns.map(column => (\r\n                <th className=\"clickable\"\r\n                    key={column.path || column.key} \r\n                    onClick={() => this.raiseSort(column.path)}>{column.label}{this.renderSortIcon(column)}</th>\r\n                ))} \r\n            </tr>\r\n        </thead>)\r\n    }\r\n}\r\n \r\nexport default TableHeader;","import React, { Component } from 'react';\r\nimport _ from 'lodash'\r\n\r\nclass TableBody extends Component {\r\n    \r\n    renderCell = (item, column) => {\r\n        if (column.content) return column.content(item)\r\n        return _.get(item, column.path)\r\n    }\r\n   \r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key)\r\n    }\r\n\r\n    render() { \r\n        const { data, columns } = this.props\r\n\r\n        return (\r\n            <tbody>\r\n                {data.map(item => (\r\n                <tr key={item._id}>\r\n                {columns.map(column => (\r\n                <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n                </td>\r\n                ))}\r\n\r\n                 </tr>))}\r\n            \r\n            </tbody> );\r\n    }\r\n}\r\n \r\nexport default TableBody","import React, { Component } from 'react';\r\nimport TableHeader from './tableHeader'\r\nimport TableBody from './tableBody'\r\n\r\nconst Table = ({columns, sortColumn, onSort, data}) => {\r\n \r\nreturn (\r\n    <table className=\"table\">\r\n           \r\n            <TableHeader \r\n            columns={columns} \r\n            sortColumn={sortColumn} \r\n            onSort={onSort}/>\r\n\r\n            <TableBody columns={columns} \r\n                       data={data}/>\r\n    \r\n    </table>\r\n)\r\n}\r\n\r\nexport default Table","import React, { Component } from 'react';\r\n\r\nconst Like = (props) => {\r\n    let classes = 'fa fa-heart'\r\n    if (!props.liked) classes += '-o'\r\n    return ( <i onClick={props.onClick} style={{cursor: 'pointer'}} \r\n    className={classes} aria-hidden=\"true\"></i>\r\n    )\r\n}\r\n \r\n\r\n\r\n\r\n \r\nexport default Like;","import React, { Component } from 'react';\r\nimport Table from './common/table'\r\nimport Like from './common/like'\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n        { path: 'title', label: 'Title'},\r\n        { path: 'genre.name', label: 'Genre'},\r\n        { path: 'numberInStock', label: 'Stock'},\r\n        { path: 'dailyRentalRate', label: 'Rate'},\r\n        { key: 'like', content: movie => ( <Like liked={movie.liked} onClick={() => this.props.onLike(movie)}/> ) },\r\n        { key: 'delete', content: movie => ( <button onClick={() => this.props.onDelete(movie)} \r\n                                          className='btn btn-danger btn-sm'>\r\n        Delete</button> )}\r\n    ]\r\n\r\n\r\nrender() { \r\n        const {movies, onSort, sortColumn} = this.props\r\n\r\nreturn (\r\n      <Table \r\n      columns={this.columns} \r\n      data={movies} \r\n      sortColumn={sortColumn} \r\n      onSort={onSort}  />\r\n        \r\n      )\r\n    }\r\n}\r\n \r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\nexport default MoviesTable","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types'\r\nimport _ from 'lodash'\r\n\r\nconst Pagination = props => {\r\n    const { itemsCount, pageSize, onPageChange, currentPage } = props\r\n\r\n    const pagesCount = Math.ceil(itemsCount / pageSize)\r\n    if (pagesCount === 1) return null\r\n    const pages = _.range(1, pagesCount + 1)\r\n\r\n\r\n    return (\r\n    <nav>\r\n        <ul className=\"pagination\">\r\n        {pages.map(page => (         \r\n            <li key={page} className={ page === currentPage ? 'page-item active' : 'page-item'}>\r\n                <a className=\"page-link\" \r\n                onClick={() => onPageChange(page)}>\r\n                {page}</a>\r\n                </li>\r\n        ))}\r\n        </ul>\r\n    </nav> )\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: propTypes.number.isRequired,\r\n    pageSize: propTypes.number.isRequired,\r\n    onPageChange: propTypes.number.isRequired,\r\n    currentPage:  propTypes.func.isRequired\r\n}\r\n\r\nexport default Pagination","import React, { Component } from 'react';\r\n\r\nconst ListGroup = (props) => {\r\n    const {items, textProperty, valueProperty, onItemSelect, selectedItem} = props\r\n\r\n    return (<ul className=\"list-group\">\r\n        { items.map(item => (\r\n            <li onClick={() => onItemSelect(item)} \r\n                key={item[valueProperty]} \r\n                className={ item ===  selectedItem ? \"list-group-item active\" : \"list-group-item\" }>\r\n            {item[textProperty]}\r\n            </li>\r\n            ))}\r\n        </ul>        \r\n    )}\r\n\r\n    ListGroup.defaultProps = {\r\n        textProperty: 'name',\r\n        valueProperty: '_id'\r\n    }\r\n\r\nexport default ListGroup","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from 'react';\r\nimport MoviesTable from './moviesTable'\r\nimport Pagination from './common/pagination'\r\nimport ListGroup from './common/listGroup'\r\nimport {getMovies} from '../services/fakeMovieService'\r\nimport {getGenres} from '../services/fakeGenreService'\r\nimport { paginate } from '../utils/paginate'\r\nimport _ from 'lodash'\r\n\r\nclass Movies extends Component {\r\n    state = { \r\n        movies : [],\r\n        genres : [],\r\n        pageSize : 4,\r\n        currentPage : 1,\r\n        sortColumn : { path:'title', order:'asc'}\r\n     }\r\n\r\ncomponentDidMount(){\r\n    const genres = [{_id:\"\", name: 'All Genres'}, ...getGenres()]\r\n    this.setState({ movies: getMovies(), genres: genres })\r\n}\r\n\r\nhandleDelete = (movie) => {\r\n    const movies = this.state.movies.filter(m => m._id !== movie._id)\r\n    this.setState({movies:movies})\r\n}\r\n\r\nhandleLike = (movie) =>{\r\n    const movies = [...this.state.movies]\r\n    const index = movies.indexOf(movie)\r\n    movies[index] = {...movies[index]}\r\n    movies[index].liked = !movies[index].liked\r\n    this.setState({movies : movies})\r\n}\r\n\r\nhandlePageChange = page => {\r\n    this.setState({ currentPage : page})\r\n}\r\n\r\nhandleGenreSelect = genre => {\r\n    this.setState({ selectedGenre : genre, currentPage : 1 })\r\n}\r\n\r\nhandleSort = sortColumn => {\r\n    \r\n    this.setState({ sortColumn : sortColumn })\r\n}\r\n\r\ngetPagedData = ()=> {\r\n        const { pageSize, currentPage, sortColumn, movies:allMovies, selectedGenre } = this.state\r\n   \r\n        const filtered = selectedGenre && selectedGenre._id\r\n            ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n            : allMovies\r\n\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\r\n\r\n        const movies = paginate(sorted, currentPage, pageSize)\r\n\r\n        return { totalCount: filtered.length, data: movies }\r\n}\r\n\r\n    render() { \r\n        const {length:count} = this.state.movies\r\n\r\n        const { pageSize, currentPage, sortColumn } = this.state\r\n\r\n       \r\n        if (count === 0) return <p>There are no movies in the database.</p>\r\n\r\n        const {totalCount, data: movies} = this.getPagedData()        \r\n    \r\n    return ( \r\n    \r\n    <div className='row'>\r\n        <div className='col-3'>\r\n            <ListGroup \r\n                items={this.state.genres}\r\n                selectedItem={this.state.selectedGenre}\r\n                onItemSelect={this.handleGenreSelect}\r\n            />\r\n        </div>\r\n        <div className='col'>\r\n        <p>This database has {totalCount} movies</p>\r\n        <MoviesTable \r\n        movies={movies}\r\n        sortColumn={sortColumn}\r\n        onLike={this.handleLike} \r\n        onDelete={this.handleDelete}\r\n        onSort={this.handleSort} />\r\n        \r\n         <Pagination itemsCount={totalCount}\r\n                            pageSize={pageSize}\r\n                            currentPage={currentPage}\r\n                            onPageChange={this.handlePageChange}\r\n                            />\r\n        </div>\r\n        \r\n        </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Movies;","import _ from 'lodash'\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize\r\n    return _(items)\r\n        .slice(startIndex)\r\n        .take(pageSize)\r\n        .value()\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Customers extends Component {\r\n   \r\n    render() { \r\n        return ( \r\n            <h1>Customers</h1>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Customers;","import React, { Component } from 'react';\r\n\r\nclass Rentals extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n            <h1>Rentals</h1>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Rentals;","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n            <h1>Not Found</h1>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nclass NavBar extends Component {\r\n    \r\n    render() { \r\n        return ( \r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            \r\n            <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\r\n\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span></button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    \r\n                <ul className=\"navbar-nav\">\r\n                \r\n                    <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/movies\">Movies <span className=\"sr-only\">(current)</span></NavLink>\r\n                    </li>\r\n      \r\n                    <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\r\n                    </li>\r\n      \r\n                    <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n                    </li>\r\n            \r\n                </ul>\r\n  \r\n            </div>\r\n        </nav>\r\n         );\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react'\nimport { Route, Switch } from \"react-router-dom\"\nimport Movies from './components/movies'\nimport Customers from './components/customers'\nimport Rentals from './components/rentals'\nimport NotFound from './components/notFound'\nimport NavBar from './components/navbar'\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n      <NavBar />\n      <main className=\"container\">\n              <Switch>       \n              <Route path=\"/movies\" component={Movies}/>\n              <Route path=\"/customers\" component={Customers}/>\n              <Route path=\"/rentals\" component={Rentals}/>\n              <Route path=\"/not-found\" component={NotFound}/>\n              \n              </Switch>\n      </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport \"font-awesome/css/font-awesome.css\"\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n\n<BrowserRouter>\n<App />\n</BrowserRouter>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}